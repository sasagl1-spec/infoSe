# Telegram –∫–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: https://t.me/modulesTheHika
# –°–æ–∑–¥–∞—Ç–µ–ª—å: @vipqlkxn

from hikka import loader, utils
from telethon.tl.functions.messages import SendReactionRequest
from telethon.tl.types import ReactionEmoji
import asyncio
import re

@loader.tds
class AutoReactorMod(loader.Module):
    """ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∞–∫—Ü–∏–π –≤ —á–∞—Ç–∞—Ö"""
    strings = {"name": "AutoReactor"}

    def __init__(self):
        self.config = loader.ModuleConfig(
            "reaction_delay", 40, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–∂–¥—É —Ä–µ–∞–∫—Ü–∏—è–º–∏",
            "enabled_chats", {}, "–ß–∞—Ç—ã —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Ä–µ–∞–∫—Ü–∏—è–º–∏",
            "default_reaction", "üëç", "–†–µ–∞–∫—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
        )
        self.active = True
        self.message_counters = {}

    async def client_ready(self, client, db):
        self._client = client
        self._db = db
        print("‚úÖ AutoReactor –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

    @loader.command(alias="reac")
    async def reac_cmd(self, message):
        """‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∞–∫—Ü–∏–π - .reac <—Ä–µ–∞–∫—Ü–∏—è> <—Å—Å—ã–ª–∫–∞> <–∏–Ω—Ç–µ—Ä–≤–∞–ª>"""
        args = utils.get_args_raw(message)
        
        if not args:
            await self.show_help(message)
            return

        # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        parts = args.split()
        if len(parts) < 2:
            await utils.answer(message, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤\nüí° –ü—Ä–∏–º–µ—Ä: .reac üëç t.me/chatname 40")
            return

        reaction = parts[0]
        chat_link = parts[1]
        interval = int(parts[2]) if len(parts) > 2 and parts[2].isdigit() else 40

        try:
            # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ —Å—Å—ã–ª–∫–∏
            chat_entity = await self.resolve_chat(chat_link)
            if not chat_entity:
                await utils.answer(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —á–∞—Ç")
                return

            chat_id = chat_entity.id
            chat_title = getattr(chat_entity, 'title', 'Unknown Chat')

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —á–∞—Ç–∞
            self.config["enabled_chats"][str(chat_id)] = {
                "reaction": reaction,
                "interval": interval,
                "title": chat_title
            }

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —á–∞—Ç–∞
            self.message_counters[str(chat_id)] = 0

            await utils.answer(message, f"‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è {chat_title}:\n"
                                      f"‚Ä¢ –†–µ–∞–∫—Ü–∏—è: {reaction}\n"
                                      f"‚Ä¢ –ò–Ω—Ç–µ—Ä–≤–∞–ª: –∫–∞–∂–¥—ã–µ {interval} —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                                      f"‚Ä¢ –°—Ç–∞—Ç—É—Å: –ê–ö–¢–ò–í–ù–û ‚úÖ")

        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    async def resolve_chat(self, chat_link):
        """üîç –ü–æ–ª—É—á–µ–Ω–∏–µ entity —á–∞—Ç–∞ –∏–∑ —Å—Å—ã–ª–∫–∏"""
        try:
            # –£–±–∏—Ä–∞–µ–º https:// –∏ —Ç.–¥.
            clean_link = re.sub(r'https?://', '', chat_link).replace('t.me/', '')
            
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —á–∞—Ç
            entity = await self._client.get_entity(clean_link)
            return entity
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Ç–∞: {e}")
            return None

    @loader.command(alias="reaclist")
    async def reac_list_cmd(self, message):
        """üìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏ - .reaclist"""
        if not self.config["enabled_chats"]:
            await utils.answer(message, "üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏")
            return

        response = "üìã **–ß–∞—Ç—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ä–µ–∞–∫—Ü–∏—è–º–∏:**\n\n"
        for chat_id, settings in self.config["enabled_chats"].items():
            response += f"‚Ä¢ {settings['title']}\n"
            response += f"  –†–µ–∞–∫—Ü–∏—è: {settings['reaction']}\n"
            response += f"  –ò–Ω—Ç–µ—Ä–≤–∞–ª: –∫–∞–∂–¥—ã–µ {settings['interval']} —Å–æ–æ–±—â–µ–Ω–∏–π\n"
            response += f"  –°—á–µ—Ç—á–∏–∫: {self.message_counters.get(chat_id, 0)}\n\n"

        await utils.answer(message, response)

    @loader.command(alias="reacstop")
    async def reac_stop_cmd(self, message):
        """‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏ - .reacstop"""
        self.active = False
        self.config["enabled_chats"] = {}
        self.message_counters = {}
        await utils.answer(message, "‚èπÔ∏è –í—Å–µ —Ä–µ–∞–∫—Ü–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

    @loader.command(alias="reacstart")
    async def reac_start_cmd(self, message):
        """‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏ - .reacstart"""
        self.active = True
        await utils.answer(message, "‚ñ∂Ô∏è –ê–≤—Ç–æ—Ä–µ–∞–∫—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã")

    @loader.command(alias="reacremove")
    async def reac_remove_cmd(self, message):
        """üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —á–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ - .reacremove <—Å—Å—ã–ª–∫–∞>"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç")
            return

        try:
            chat_entity = await self.resolve_chat(args)
            if not chat_entity:
                await utils.answer(message, "‚ùå –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return

            chat_id = str(chat_entity.id)
            if chat_id in self.config["enabled_chats"]:
                chat_title = self.config["enabled_chats"][chat_id]["title"]
                del self.config["enabled_chats"][chat_id]
                self.message_counters.pop(chat_id, None)
                
                await utils.answer(message, f"‚úÖ –†–µ–∞–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã –¥–ª—è —á–∞—Ç–∞: {chat_title}")
            else:
                await utils.answer(message, "‚ùå –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")

        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    @loader.watcher()
    async def message_watcher(self, message):
        """üëÄ –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–π"""
        if not self.active or not message:
            return

        try:
            chat_id = str(message.chat_id)
            if chat_id not in self.config["enabled_chats"]:
                return

            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
            self.message_counters[chat_id] = self.message_counters.get(chat_id, 0) + 1
            
            settings = self.config["enabled_chats"][chat_id]
            interval = settings["interval"]
            reaction = settings["reaction"]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é
            if self.message_counters[chat_id] >= interval:
                await self.set_reaction(message, reaction)
                self.message_counters[chat_id] = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
                print(f"‚úÖ –ü–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ä–µ–∞–∫—Ü–∏—è {reaction} –≤ —á–∞—Ç–µ {settings['title']}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ: {e}")

    async def set_reaction(self, message, reaction):
        """üéØ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        try:
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä–µ–∞–∫—Ü–∏–∏
            reaction_obj = ReactionEmoji(emoticon=reaction)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é
            await self._client(SendReactionRequest(
                peer=message.chat_id,
                msg_id=message.id,
                reaction=[reaction_obj]
            ))
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–∏: {e}")

    async def show_help(self, message):
        """üìñ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
        help_text = """
ü§ñ **AutoReactor - –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º**

‚ö° **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `.reac <—Ä–µ–∞–∫—Ü–∏—è> <—Å—Å—ã–ª–∫–∞> <–∏–Ω—Ç–µ—Ä–≤–∞–ª>` - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏
‚Ä¢ `.reaclist` - –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
‚Ä¢ `.reacstop` - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏
‚Ä¢ `.reacstart` - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏
‚Ä¢ `.reacremove <—Å—Å—ã–ª–∫–∞>` - –£–¥–∞–ª–∏—Ç—å —á–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞

üéØ **–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
‚Ä¢ `.reac üëç t.me/mygroup 40` - –°—Ç–∞–≤–∏—Ç—å üëç –∫–∞–∂–¥—ã–µ 40 —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ `.reac üöÄ @channelname 25` - –°—Ç–∞–≤–∏—Ç—å üöÄ –∫–∞–∂–¥—ã–µ 25 —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ `.reac ‚ù§Ô∏è t.me/chat 1` - –°—Ç–∞–≤–∏—Ç—å ‚ù§Ô∏è –Ω–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

üí° **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏:** –õ—é–±—ã–µ —ç–º–æ–¥–∑–∏ (üëç, ‚ù§Ô∏è, üéâ, üòÇ, üöÄ –∏ —Ç.–¥.)

‚ö†Ô∏è **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Ä–µ–∞–∫—Ü–∏–π –≤ —á–∞—Ç–µ
        """
        await utils.answer(message, help_text)

    @loader.command(alias="reactest")
    async def reac_test_cmd(self, message):
        """üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–∞–∫—Ü–∏—è - .reactest <—Ä–µ–∞–∫—Ü–∏—è>"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞")
            return

        try:
            reply = await message.get_reply_message()
            if not reply:
                await utils.answer(message, "‚Ü©Ô∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞")
                return

            await self.set_reaction(reply, args)
            await utils.answer(message, f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–∞–∫—Ü–∏—è {args} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {str(e)}")

# üéâ –ú–æ–¥—É–ª—å –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!
print("‚úÖ AutoReactor —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
