# Telegram –∫–∞–Ω–∞–ª –º–æ–¥—É–ª–µ–π: https://t.me/modulesTheHika
# –°–æ–∑–¥–∞—Ç–µ–ª—å: @vipqlkxn

from hikka import loader, utils
from telethon.tl.functions.messages import GetMessagesRequest, ForwardMessagesRequest
from telethon.tl.types import MessageService, MessageMediaPhoto, MessageMediaDocument
from telethon.tl.functions.messages import SaveGifRequest, SaveRecentStickerRequest
import asyncio
import time
import os

@loader.tds
class AutoSaveMod(loader.Module):
    """üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π, —Ñ–æ—Ç–æ –∏ –º–µ–¥–∏–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"""
    strings = {"name": "AutoSaverPro"}

    def __init__(self):
        self.config = loader.ModuleConfig(
            "auto_save_enabled", True, "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ"
        )
        self.saved_messages = set()
        self.favorite_folder = "saved_messages"

    async def client_ready(self, client, db):
        self._client = client
        self._db = db
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        os.makedirs(self.favorite_folder, exist_ok=True)
        print("‚úÖ AutoSaverPro –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

    @loader.command(alias="autosave")
    async def autosave_cmd(self, message):
        """üîß –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ - .autosave"""
        self.config["auto_save_enabled"] = not self.config["auto_save_enabled"]
        status = "–≤–∫–ª—é—á–µ–Ω–æ ‚úÖ" if self.config["auto_save_enabled"] else "–≤—ã–∫–ª—é—á–µ–Ω–æ ‚ùå"
        await utils.answer(message, f"üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ {status}")

    @loader.command(alias="savechat")
    async def save_chat_cmd(self, message):
        """üíø –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–µ—Å—å —á–∞—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ - .savechat"""
        args = utils.get_args_raw(message)
        chat_id = message.chat_id
        
        if args and args.isdigit():
            chat_id = int(args)
        
        await utils.answer(message, "üì• –ù–∞—á–∏–Ω–∞—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–∞—Ç–∞...")
        
        try:
            saved_count = 0
            async for msg in self._client.iter_messages(chat_id, limit=1000):
                if await self.save_message(msg):
                    saved_count += 1
                    await asyncio.sleep(0.1)  # –ß—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å
            
            await utils.answer(message, f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {saved_count} —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —á–∞—Ç–∞")
            
        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    @loader.command(alias="savemsg")
    async def save_message_cmd(self, message):
        """üìå –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - .savemsg"""
        reply = await message.get_reply_message()
        if not reply:
            await utils.answer(message, "‚Ü©Ô∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
            return
        
        if await self.save_message(reply):
            await utils.answer(message, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!")
        else:
            await utils.answer(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")

    async def save_message(self, message):
        """üíæ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            if message.id in self.saved_messages:
                return False
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ (Favorites)
            await message.forward_to('me')
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
            if message.media:
                await self.download_media(message)
            
            self.saved_messages.add(message.id)
            self.log_saved_message(message)
            
            return True
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
            return False

    async def download_media(self, message):
        """üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤"""
        try:
            if isinstance(message.media, (MessageMediaPhoto, MessageMediaDocument)):
                # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
                timestamp = int(time.time())
                filename = f"{self.favorite_folder}/{message.chat_id}_{message.id}_{timestamp}"
                
                # –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞
                await message.download_media(file=filename)
                
                # –î–ª—è —Ñ–æ—Ç–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                if isinstance(message.media, MessageMediaPhoto):
                    print(f"üì∏ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Ñ–æ—Ç–æ: {filename}")
                else:
                    print(f"üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: {filename}")
                    
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–µ–¥–∏–∞: {e}")

    def log_saved_message(self, message):
        """üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        log_file = f"{self.favorite_folder}/saved_messages.log"
        with open(log_file, "a", encoding="utf-8") as f:
            f.write(f"{time.ctime()} | Chat: {message.chat_id} | MsgID: {message.id}\n")

    @loader.command(alias="savedstats")
    async def saved_stats_cmd(self, message):
        """üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - .savedstats"""
        log_file = f"{self.favorite_folder}/saved_messages.log"
        if os.path.exists(log_file):
            with open(log_file, "r", encoding="utf-8") as f:
                lines = f.readlines()
            
            stats = f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π:\n"
            stats += f"‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(self.saved_messages)}\n"
            stats += f"‚Ä¢ –í –ª–æ–≥-—Ñ–∞–π–ª–µ: {len(lines)} –∑–∞–ø–∏—Å–µ–π\n"
            stats += f"‚Ä¢ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: {'–í–ö–õ ‚úÖ' if self.config['auto_save_enabled'] else '–í–´–ö–õ ‚ùå'}"
            
            await utils.answer(message, stats)
        else:
            await utils.answer(message, "üìù –õ–æ–≥-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")

    @loader.command(alias="clearsaved")
    async def clear_saved_cmd(self, message):
        """üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - .clearsaved"""
        self.saved_messages.clear()
        await utils.answer(message, "‚úÖ –°–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—á–∏—â–µ–Ω")

    # üî• –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏—Ö—Å—è —Å–æ–æ–±—â–µ–Ω–∏–π
    @loader.watcher()
    async def watcher(self, message):
        """üëÄ –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
        if not self.config["auto_save_enabled"]:
            return
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è
            if hasattr(message, 'ttl_period') and message.ttl_period:
                print(f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ! ID: {message.id}")
                await self.save_message(message)
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã
            if message.media and message.id not in self.saved_messages:
                # –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö –º–µ–¥–∏–∞
                if isinstance(message.media, MessageMediaPhoto):
                    print(f"üì∏ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∏–∑ —á–∞—Ç–∞ {message.chat_id}")
                    await self.save_message(message)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ: {e}")

    # üéØ –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ disappearing media
    @loader.watcher(only_messages=True, from_self=False)
    async def disappearing_media_watcher(self, message):
        """üì∏ –ü–µ—Ä–µ—Ö–≤–∞—Ç –∏—Å—á–µ–∑–∞—é—â–∏—Ö –º–µ–¥–∏–∞"""
        if not self.config["auto_save_enabled"]:
            return
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ disappearing media
            if (hasattr(message, 'media') and message.media and 
                hasattr(message, 'ttl_period') and message.ttl_period > 0):
                
                print(f"üö® –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–æ –∏—Å—á–µ–∑–∞—é—â–µ–µ –º–µ–¥–∏–∞! TTL: {message.ttl_period} —Å–µ–∫")
                await self.save_message(message)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –º–µ–¥–∏–∞: {e}")

    @loader.command(alias="savehelp")
    async def save_help_cmd(self, message):
        """üìñ –ü–æ–º–æ—â—å –ø–æ –º–æ–¥—É–ª—é AutoSaver - .savehelp"""
        help_text = """
üíæ **AutoSaverPro - –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º**

üîß **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `.autosave` - –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
‚Ä¢ `.savemsg` - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–æ—Ç–≤–µ—Ç–∏—Ç—å)
‚Ä¢ `.savechat` - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–µ—Å—å —á–∞—Ç
‚Ä¢ `.savedstats` - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π
‚Ä¢ `.clearsaved` - –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫

üëÄ **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç:**
‚Ä¢ –°–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è ‚è≥
‚Ä¢ –ò—Å—á–µ–∑–∞—é—â–∏–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ üì∏
‚Ä¢ –í–∞–∂–Ω—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã üìÅ
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è —Å TTL üö®

‚ö° **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –í—Å–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" –∏ –ª–æ–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É
        """
        await utils.answer(message, help_text)

# üéâ –ú–æ–¥—É–ª—å –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!
print("‚úÖ AutoSaverPro —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
